services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: role-play-ai-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: role_play_ai
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    networks:
      - role-play-network

  # 后端Go服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: role-play-ai-backend
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: app_user
      DB_PASSWORD: app_password
      DB_NAME: role_play_ai
      JWT_SECRET: your-secret-key-here
      PORT: 8080
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: qwen2.5:1.5b
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - role-play-network

  # Ollama AI服务
  ollama:
    image: ollama/ollama:latest
    container_name: role-play-ai-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - role-play-network
    # 注意：首次运行需要手动拉取模型
    # docker exec role-play-ai-ollama ollama pull qwen2.5:1.5b

  # 前端Vue应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: role-play-ai-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - role-play-network

volumes:
  mysql_data:
  ollama_data:

networks:
  role-play-network:
    driver: bridge
